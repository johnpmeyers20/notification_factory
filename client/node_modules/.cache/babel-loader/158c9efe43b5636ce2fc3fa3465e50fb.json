{"ast":null,"code":"var _jsxFileName = \"/Users/johnmeyers/Documents/Projects/notification_factory/src/App.js\";\nimport './App.css';\nimport './components/TopHalf';\nimport TopHalf from './components/TopHalf';\nimport BottomHalf from './components/BottomHalf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Anna',\n  telephone: '9173455445',\n  email: 'john.meyers@mfa.gov.hu'\n}, {\n  name: 'Dzsoni',\n  telephone: '3476965676',\n  email: 'johnpmeyers20@yahoo.com'\n}];\n\nfunction App() {\n  // console.log(data);\n  handleDragStart = e => e.dataTransfer.setData(\"text\", this.id);\n\n  handleDragEnterLeave = e => {\n    if (e.type == \"dragenter\") {\n      this.className = \"drag-enter\";\n    } else {\n      this.className = \"\";\n    }\n  };\n\n  handleOverDrop = e => {\n    e.preventDefault(); //Depending on the browser in use, not using the preventDefault() could cause any number of strange default behaviours to occur.\n\n    if (e.type != \"drop\") {\n      return; //Means function will exit if no \"drop\" event is fired.\n    } //Stores dragged elements ID in var draggedId\n\n\n    var draggedId = e.dataTransfer.getData(\"text\"); //Stores referrence to element being dragged in var draggedEl\n\n    var draggedEl = document.getElementById(draggedId); //if the event \"drop\" is fired on the dragged elements original drop target e.i..  it's current parentNode, \n    //then set it's css class to =\"\" which will remove dotted lines around the drop target and exit the function.\n\n    if (draggedEl.parentNode == this) {\n      this.className = \"\";\n      return; //note: when a return is reached a function exits.\n    } //Otherwise if the event \"drop\" is fired from a different target element, detach the dragged element node from it's\n    //current drop target (i.e current perantNode) and append it to the new target element. Also remove dotted css class. \n\n\n    draggedEl.parentNode.removeChild(draggedEl);\n    this.appendChild(draggedEl); //Note: \"this\" references to the current target div that is firing the \"drop\" event.\n\n    this.className = \"\";\n  }; //Retrieve two groups of elements, those that are draggable and those that are drop targets:\n\n\n  var draggable = document.querySelectorAll('[draggable]');\n  var targets = document.querySelectorAll('[data-drop-target]'); //Note: using the document.querySelectorAll() will aquire every element that is using the attribute defind in the (..)\n  //Register event listeners for the\"dragstart\" event on the draggable elements:\n\n  for (var i = 0; i < draggable.length; i++) {\n    draggable[i].addEventListener(\"dragstart\", handleDragStart);\n  } //Register event listeners for \"dragover\", \"drop\", \"dragenter\" & \"dragleave\" events on the drop target elements.\n\n\n  for (var i = 0; i < targets.length; i++) {\n    targets[i].addEventListener(\"dragover\", handleOverDrop);\n    targets[i].addEventListener(\"drop\", handleOverDrop);\n    targets[i].addEventListener(\"dragenter\", handleDragEnterLeave);\n    targets[i].addEventListener(\"dragleave\", handleDragEnterLeave);\n  }\n\n  console.log();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notification Factory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopHalf, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomHalf, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnmeyers/Documents/Projects/notification_factory/src/App.js"],"names":["TopHalf","BottomHalf","data","name","telephone","email","App","handleDragStart","e","dataTransfer","setData","id","handleDragEnterLeave","type","className","handleOverDrop","preventDefault","draggedId","getData","draggedEl","document","getElementById","parentNode","removeChild","appendChild","draggable","querySelectorAll","targets","i","length","addEventListener","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport './components/TopHalf';\nimport TopHalf from './components/TopHalf';\nimport BottomHalf from './components/BottomHalf';\n\n\nconst data = [\n  {\n    name: 'Anna',\n    telephone: '9173455445',\n    email: 'john.meyers@mfa.gov.hu'\n  },\n  {\n    name: 'Dzsoni',\n    telephone: '3476965676',\n    email: 'johnpmeyers20@yahoo.com'\n  }\n];\n\n\n\nfunction App() {\n  // console.log(data);\n  handleDragStart = e => e.dataTransfer.setData(\"text\", this.id); \n  handleDragEnterLeave = e => {\n    if(e.type == \"dragenter\") {\n      this.className = \"drag-enter\" \n    } else {\n      this.className = \"\" \n    }\n  }\n  handleOverDrop = e => {\n    e.preventDefault(); \n    //Depending on the browser in use, not using the preventDefault() could cause any number of strange default behaviours to occur.\n    if (e.type != \"drop\") {\n      return; //Means function will exit if no \"drop\" event is fired.\n    }\n    //Stores dragged elements ID in var draggedId\n    var draggedId = e.dataTransfer.getData(\"text\");\n    //Stores referrence to element being dragged in var draggedEl\n    var draggedEl = document.getElementById(draggedId);\n  \n    //if the event \"drop\" is fired on the dragged elements original drop target e.i..  it's current parentNode, \n    //then set it's css class to =\"\" which will remove dotted lines around the drop target and exit the function.\n    if (draggedEl.parentNode == this) {\n      this.className = \"\";\n      return; //note: when a return is reached a function exits.\n    }\n    //Otherwise if the event \"drop\" is fired from a different target element, detach the dragged element node from it's\n    //current drop target (i.e current perantNode) and append it to the new target element. Also remove dotted css class. \n    draggedEl.parentNode.removeChild(draggedEl);\n    this.appendChild(draggedEl); //Note: \"this\" references to the current target div that is firing the \"drop\" event.\n    this.className = \"\";\n  }\n  //Retrieve two groups of elements, those that are draggable and those that are drop targets:\n  var draggable = document.querySelectorAll('[draggable]')\n  var targets = document.querySelectorAll('[data-drop-target]');\n  //Note: using the document.querySelectorAll() will aquire every element that is using the attribute defind in the (..)\n\n\n  //Register event listeners for the\"dragstart\" event on the draggable elements:\n  for(var i = 0; i < draggable.length; i++) {\n    draggable[i].addEventListener(\"dragstart\", handleDragStart);\n  }\n\n  //Register event listeners for \"dragover\", \"drop\", \"dragenter\" & \"dragleave\" events on the drop target elements.\n  for(var i = 0; i < targets.length; i++) {\n    targets[i].addEventListener(\"dragover\", handleOverDrop);\n    targets[i].addEventListener(\"drop\", handleOverDrop);\n    targets[i].addEventListener(\"dragenter\", handleDragEnterLeave);\n    targets[i].addEventListener(\"dragleave\", handleDragEnterLeave);\n  }\n  console.log()\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>Notification Factory</h1>\n        <TopHalf />\n        <BottomHalf data={data} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}